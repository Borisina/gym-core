spring:
  application:
    name: MAIN
  profiles: dev
  datasource:
    url: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
server:
  port: 8080
auth-bearer-token: 'myBearerToken'
trainer-workload-service-bearer-token: 'myBearerToken2'
brute-force-protector:
  max-attempt: 3
  block-time-minute: 5
secret-key: 'mySecretKey1234567890mySecretKey1234567890mySecretKey1234567890mySecretKey1234567890'
audience-type: 'service'
mq:
  password: ${ACTIVEMQ_ADMIN_PASSWORD}
  username: ${ACTIVEMQ_ADMIN_LOGIN}
  url: 'tcp://activemq:61616'
  converter:
    type-id-property-name: '_type'
  queue:
    name:
      workload: 'trainer-workload-queue'
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka-server:8761/eureka
    register-with-eureka: true
    fetch-registry: true

---

spring:
  application:
    name: MAIN
  profiles: test
  datasource:
    url: jdbc:postgresql://localhost:5439/gym
    username: postgres
    password: root
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
server:
  port: 8085
auth-bearer-token: 'myBearerToken'
trainer-workload-service-bearer-token: 'myBearerToken2'
brute-force-protector:
  max-attempt: 3
  block-time-minute: 5
secret-key: 'mySecretKey1234567890mySecretKey1234567890mySecretKey1234567890mySecretKey1234567890'
audience-type: 'service'
mq:
  password: admin
  username: admin
  url: 'tcp://localhost:8199'
  converter:
    type-id-property-name: '_type'
  queue:
    name:
      workload: 'trainer-workload-queue'
eureka:
  client:
    enabled: false
    serviceUrl:
      defaultZone: http://eureka-server:8761/eureka
    register-with-eureka: true
    fetch-registry: true
TRAINER-WORKLOAD-SERVICE:
  ribbon:
    listOfServers: http://localhost:8080
